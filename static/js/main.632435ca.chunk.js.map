{"version":3,"sources":["pokeapi.ts","utils.ts","components/TypeBadge.tsx","TypesPage/TypeSummary.tsx","TypesPage/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","MissingPage/index.tsx","PokemonPage/index.tsx","HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["pokeapi","Pokedex","protocol","titleCase","s","slice","toUpperCase","TypeBadge","type","this","props","react_default","a","createElement","Label","style","minWidth","React","Component","TypeSummary","state","typeData","loading","types","setState","newTypeData","getTypeByName","fetchTypeData","newProps","multipliers","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","defenseType","value","damage_relations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","double_damage_from","attackType","name","update","v","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","half_damage_from","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","no_damage_from","set","filter","m","calcDamageMultipliers","entrySeq","map","_ref7","_ref8","Object","slicedToArray","multiplier","sort","b","localeCompare","toJS","Card","fluid","Dimmer","active","Loader","Content","Header","length","Fragment","t","key","List","Grid","Row","Column","width","_ref9","_ref10","Item","className","TypeBadge_TypeBadge","MultiplierBadge","by","_ref11","_ref12","_ref13","_$2$1$05$025$0$by$","4","text","color","2","1","0.5","fraction","0.25","0","toString","_$2$1$05$025$0$by$$te","_$2$1$05$025$0$by$$fr","cx","circular","size","TypesPage","typeList","getTypesList","data","results","index","_this2","Error","concat","e","_ref","newTypes","push","_this$state","Segment","vertical","as","TypeDropdown","onChange","handleTypes","placeholder","some","TypeSummary_TypeSummary","icon","Icon","_ref2","typeDropdownOptions","Dropdown","compact","search","selection","clearable","options","Menu","inverted","borderless","borderRadius","Container","Link","to","Image","src","process","spaced","position","href","Footer","secondary","MissingPage","textAlign","Subheader","PokemonPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pokedex","pokemon","handlePokemon","bind","assertThisInitialized","getPokedexByName","pokemon_entries","_","PokemonDropdown","PokemonPage_PokemonDetails","pokemon_species","keyedValue","arguments","find","d","keys","every","_get","PokemonDetails","speciesDetails","varieties","chosenVariety","getPokemonSpeciesByName","varietyPromises","_ref5","asyncToGenerator","regenerator_default","mark","_callee2","_ref4","is_default","variety","wrap","_context2","prev","abrupt","getPokemonByName","stop","_x","apply","varietyPromise","fetchPokemonDetails","_this$state2","Dimmable","dimmed","blurring","PokemonInfo","species","_ref6","floated","sprites","front_default","pokedex_numbers","pokedex.name","entry_number","names","language.name","Meta","genera","genus","slot","Description","flavor_text_entries","version.name","flavor_text","replace","HomePage","App","BrowserRouter","basename","Header_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"slBAKeA,EAHC,WAAIC,GAAQ,CAC1BC,SAAU,UCHL,SAASC,EAAUC,GACxB,OAAOA,EAAEC,MAAM,EAAG,GAAGC,cAAgBF,EAAEC,MAAM,OCI1BE,mLAGV,IACCC,EAASC,KAAKC,MAAdF,KACR,OAAOG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,SAAU,KAAOb,EAAUK,WALfS,IAAMC,WCgBxBC,qNAInBC,MAAQ,CACNC,SAAU,GACVC,SAAS,0NAGSC,iCAAQd,KAAKC,MAAMa,oCAClBA,uEAARf,WACLC,KAAKW,MAAMC,SAASb,kEAGxBC,KAAKe,SAAS,CAAEF,SAAS,IACrBG,iBAAmBhB,KAAKW,MAAMC,oBACRrB,EAAQ0B,cAAclB,WAAhDiB,EAAYjB,UACZC,KAAKe,SAAS,CAAEH,SAAUI,iRAE5BhB,KAAKe,SAAS,CAAEF,SAAS,8KAIzBb,KAAKkB,kEAGmBC,GACxBnB,KAAKkB,cAAcC,EAASL,uDAI5B,IAAIM,EAAmCC,cADIC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE3C,QAAAC,EAAAC,EAA0B3B,KAAKC,MAAMa,MAArCc,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA4C,KAAjCU,EAAiCN,EAAAO,MAC1C,GAAKjC,KAAKW,MAAMC,SAASoB,GAAzB,CAD0C,IAIpCE,EAAqBlC,KAAKW,MAAMC,SAASoB,GAAzCE,iBAJoCC,GAAA,EAAAC,GAAA,EAAAC,OAAAZ,EAAA,IAK1C,QAAAa,EAAAC,EAAmCL,EAAiBM,mBAApDZ,OAAAC,cAAAM,GAAAG,EAAAC,EAAAT,QAAAC,MAAAI,GAAA,EAAwE,KAArDM,EAAqDH,EAAAL,MAA3DS,KACXtB,EAAcA,EAAYuB,OAAOF,EAAY,EAAG,SAACG,GAAD,OAAmB,EAAJA,KANvB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAAA,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IAQ1C,QAAAyB,EAAAC,EAAmCjB,EAAiBkB,iBAApDxB,OAAAC,cAAAkB,GAAAG,EAAAC,EAAArB,QAAAC,MAAAgB,GAAA,EAAsE,KAAnDN,EAAmDS,EAAAjB,MAAzDS,KACXtB,EAAcA,EAAYuB,OAAOF,EAAY,EAAG,SAACG,GAAD,OAAeA,EAAI,KAT3B,MAAAC,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAAA,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAA9B,EAAA,IAW1C,QAAA+B,EAAAC,EAAmCvB,EAAiBwB,eAApD9B,OAAAC,cAAAwB,GAAAG,EAAAC,EAAA3B,QAAAC,MAAAsB,GAAA,EAAoE,KAAjDZ,EAAiDe,EAAAvB,MAAvDS,KACXtB,EAAcA,EAAYuC,IAAIlB,EAAY,IAZF,MAAAI,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,MAFD,MAAAV,GAAAtB,GAAA,EAAAC,EAAAqB,EAAA,YAAAvB,GAAA,MAAAK,EAAAmB,QAAAnB,EAAAmB,SAAA,WAAAvB,EAAA,MAAAC,GAiB3C,OAAOJ,EAAYwC,OAAO,SAAAC,GAAC,OAAU,IAANA,qCAGxB,IACC/C,EAAUd,KAAKC,MAAfa,MACAD,EAAYb,KAAKW,MAAjBE,QAEJO,EAAcpB,KAAK8D,wBACpBC,WACAC,IAAI,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,SAAyB,CAAElE,KAA3BmE,EAAA,GAAiCG,WAAjCH,EAAA,MACJI,KAAK,SAACnE,EAAGoE,GACR,OAAIpE,EAAEkE,WAAaE,EAAEF,YACX,EACClE,EAAEkE,WAAaE,EAAEF,WACnB,EAEAlE,EAAEJ,KAAKyE,cAAcD,EAAExE,QAGjC0E,OAEH,OACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,OAAK,GACTzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAQC,OAAQhE,GACdX,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQD,OAAQhE,KAElBX,EAAAC,EAAAC,cAACsE,EAAA,EAAKK,QAAN,KACE7E,EAAAC,EAAAC,cAACsE,EAAA,EAAKM,OAAN,KACGlE,EAAMmE,OAAS,GACd/E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACGxF,EAAUoB,EAAM,IAChBA,EAAMlB,MAAM,GAAGoE,IAAI,SAAAmB,GAAC,OACnBjF,EAAAC,EAAAC,cAAA,QAAMgF,IAAKD,GAAX,SAAkBzF,EAAUyF,SAMtCjF,EAAAC,EAAAC,cAACsE,EAAA,EAAKK,QAAN,KACE7E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACEnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,CAAaC,MAAO,GACjBrE,EACEwC,OAAO,SAAA8B,GAAA,OAAAA,EAAGrB,YAA+B,IACzCL,IAAI,SAAA2B,GAAA,IAAG5F,EAAH4F,EAAG5F,KAAMsE,EAATsB,EAAStB,WAAT,OACHnE,EAAAC,EAAAC,cAACiF,EAAA,EAAKO,KAAN,CAAWR,IAAKrF,EAAM8F,UAAU,mBAC9B3F,EAAAC,EAAAC,cAAC0F,EAAD,CAAW/F,KAAMA,IACjBG,EAAAC,EAAAC,cAAC2F,EAAD,CAAiBC,GAAI3B,QAI7BnE,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,CAAaC,MAAO,GACjBrE,EACEwC,OAAO,SAAAqC,GAAA,OAAAA,EAAG5B,WAA8B,IACxCL,IAAI,SAAAkC,GAAA,IAAGnG,EAAHmG,EAAGnG,KAAMsE,EAAT6B,EAAS7B,WAAT,OACHnE,EAAAC,EAAAC,cAACiF,EAAA,EAAKO,KAAN,CAAWR,IAAKrF,EAAM8F,UAAU,mBAC9B3F,EAAAC,EAAAC,cAAC0F,EAAD,CAAW/F,KAAMA,IACjBG,EAAAC,EAAAC,cAAC2F,EAAD,CAAiBC,GAAI3B,oBAzGJ7D,IAAMC,YAsH/C,SAASsF,EAATI,GAAiC,IAANH,EAAMG,EAANH,GAAMI,EACyB,CACtDC,EAAK,CAAEC,KAAM,KAAMC,MAAO,QAC1BC,EAAK,CAAEF,KAAM,KAAMC,MAAO,SAC1BE,EAAK,CAAEH,KAAM,MACbI,GAAO,CAAEJ,KAAM,OAAKC,MAAO,MAAOI,UAAU,GAC5CC,IAAQ,CAAEN,KAAM,OAAKC,MAAO,SAAUI,UAAU,GAChDE,EAAK,CAAEP,KAAM,KAAMC,MAAO,UAC1BP,EAAGc,YAR0BC,EAAAX,EACzBE,YADyB,IAAAS,EAClBf,EAAGc,WADeC,EACHR,EADGH,EACHG,MADGS,EAAAZ,EACIO,gBADJ,IAAAK,KAU/B,OACE9G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwF,UAAWoB,IAAG,mBAAoB,CAAEN,aACpCO,UAAQ,EACRC,KAAK,QACLZ,MAAOA,GAEPrG,EAAAC,EAAAC,cAAA,YAAOkG,QCpIQc,6MACnBzG,MAAQ,CACN0G,SAAU,KACVvG,MAAO,CAAC,KAAM,2MAIc,OAAxBd,KAAKW,MAAM0G,yCACM9H,EAAQ+H,sBAArBC,SACNvH,KAAKe,SAAS,CAAEsG,SAAUE,EAAKC,gJAIvBC,GAAO,IAAAC,EAAA1H,KACjB,GAAIyH,EAAQ,GAAKA,EAAQ,EACvB,MAAM,IAAIE,MAAJ,iBAAAC,OAA2BH,IAEnC,OAAO,SAACI,EAADC,GAAqC,IAA/B7F,EAA+B6F,EAA/B7F,MACXyF,EAAK3G,SAAS,SAAAJ,GACZA,EAAMG,MAAM2G,GAASxF,EAErB,IADA,IAAI8F,EAAWpH,EAAMG,MAAM8C,OAAO,SAAAuB,GAAC,QAAMA,IAClC4C,EAAS9C,OAAS,GACvB8C,EAASC,KAAK,MAEhB,MAAO,CAAElH,MAAOiH,uCAKb,IAAAE,EACqBjI,KAAKW,MAAzBG,EADDmH,EACCnH,MAAOuG,EADRY,EACQZ,SAEf,OAAiB,OAAbA,EACKnH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQD,QAAM,IAIrB3E,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASC,UAAQ,GACfjI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,KACEtF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQoD,GAAG,MAAX,mBAGJlI,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClBvF,EAAAC,EAAAC,cAACiI,EAAD,CACEC,SAAUtI,KAAKuI,YAAY,GAC3BlB,SAAUA,EACVpF,MAAOnB,EAAM,GACb0H,YAAa,gBAGjBtI,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClBvF,EAAAC,EAAAC,cAACiI,EAAD,CACEC,SAAUtI,KAAKuI,YAAY,GAC3BlB,SAAUA,EACVpF,MAAOnB,EAAM,GACb0H,YAAa,kBAInBtI,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,KACG1E,GAASA,EAAM2H,KAAK,SAAAtD,GAAC,QAAMA,IAC1BjF,EAAAC,EAAAC,cAACsI,EAAD,CAAa5H,MAAOA,EAAM8C,OAAO,SAAAuB,GAAC,QAAMA,MAExCjF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASM,aAAW,GAClBtI,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQ2D,MAAI,GACVzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,KAAK,WADb,0CApEqBlC,IAAMC,WAkF7C,SAAS4H,EAATQ,GAAkE,IAA1C5G,EAA0C4G,EAA1C5G,MAAOoF,EAAmCwB,EAAnCxB,SAAUiB,EAAyBO,EAAzBP,SAAUE,EAAeK,EAAfL,YAC3CM,EAAsBzB,EAASrD,IAAI,SAAAjE,GAAI,MAAK,CAChDqF,IAAKrF,EAAK2C,KACVT,MAAOlC,EAAK2C,KACZ4D,KAAM5G,EAAUK,EAAK2C,SAGvB,OACExC,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CACEC,SAAO,EACPrE,OAAK,EACL6D,YAAaA,EACbS,QAAM,EACNC,WAAS,EACTC,WAAS,EACTC,QAASN,EACTR,SAAUA,EACVrG,MAAOA,mDCrHE,SAAS+C,IAEtB,OACE9E,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CACExD,UAAU,UACVyD,UAAQ,EACRC,YAAU,EACVhD,MAAM,MACNjG,MAAO,CAAEkJ,aAAc,IAEvBtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KACEvJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAKzD,KAAN,CAAWwC,GAAIsB,IAAMC,GAAG,KACtBzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,IAXCC,yBAWaC,OAAO,QAAQlE,UAAU,SADhD,gBAIA3F,EAAAC,EAAAC,cAACiJ,EAAA,EAAKzD,KAAN,CAAWwC,GAAIsB,IAAMC,GAAG,YAAxB,WAGAzJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAKzD,KAAN,CAAWwC,GAAIsB,IAAMC,GAAG,UAAxB,SAGAzJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAKzD,KAAN,CACE+C,MAAI,EACJqB,SAAS,QACT5B,GAAG,IACH6B,KAAK,2CAEL/J,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,KAAK,qBC5BN,SAASwH,IACtB,OACEhK,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASC,UAAQ,EAACgC,WAAS,EAAChD,KAAK,OAAOtB,UAAU,eAChD3F,EAAAC,EAAAC,cAAA,yBACeF,EAAAC,EAAAC,cAAA,KAAG6J,KAAK,uBAAR,kBADf,mFCHS,SAASG,IACtB,OACElK,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAW9E,OAAK,EAAC0F,UAAU,SAASxE,UAAU,gBAC5C3F,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQoD,GAAG,KAAKO,MAAI,GAClBzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,KAAK,oBADb,iBAGExC,EAAAC,EAAAC,cAAC4E,EAAA,EAAOsF,UAAR,yDCyBaC,sBAQnB,SAAAA,EAAYtK,GAAO,IAAAuK,EAAA,OAAArG,OAAAsG,EAAA,EAAAtG,CAAAnE,KAAAuK,IACjBC,EAAArG,OAAAuG,EAAA,EAAAvG,CAAAnE,KAAAmE,OAAAwG,EAAA,EAAAxG,CAAAoG,GAAAK,KAAA5K,KAAMC,KARRU,MAAQ,CACNE,SAAS,EACTgK,QAAS,KAETC,QAAS,aAKTN,EAAKO,cAAgBP,EAAKO,cAAcC,KAAnB7G,OAAA8G,EAAA,EAAA9G,QAAA8G,EAAA,EAAA9G,CAAAqG,KAFJA,oMAMU,OAAvBxK,KAAKW,MAAMkK,+BACb7K,KAAKe,SAAS,CAAEF,SAAS,aACNtB,EAAQ2L,iBAAiB,gBAAtC3D,SACNvH,KAAKe,SAAS,CAAEF,SAAS,EAAOgK,QAAStD,EAAK4D,0JAIpCC,KAAsC,IAA5BnJ,EAA4B6F,EAA5B7F,MACtBjC,KAAKe,SAAS,CAAE+J,QAAS7I,qCAGlB,IAAAgG,EAC+BjI,KAAKW,MAAnCE,EADDoH,EACCpH,QAASiK,EADV7C,EACU6C,QAASD,EADnB5C,EACmB4C,QAC1B,OAAIhK,EACKX,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAQD,QAAQ,IAIvB3E,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASC,UAAQ,GACfjI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,KACEtF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQoD,GAAG,MAAX,mBAGJlI,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,KACEtF,EAAAC,EAAAC,cAACiL,EAAD,CACE/C,SAAUtI,KAAK+K,cACfF,QAASA,EACT5I,MAAO6I,EACPtC,YAAY,wBAIlBtI,EAAAC,EAAAC,cAACkL,EAAD,CAAgBR,QAASA,aAjDMtK,IAAMC,YAwD/C,SAAS4K,EAATxC,GAUG,IATDP,EASCO,EATDP,SACAuC,EAQChC,EARDgC,QACA5I,EAOC4G,EAPD5G,MACAuG,EAMCK,EANDL,YAOMY,EAAUyB,EAAQ7G,IAAI,SAAA8G,GAAO,MAAK,CACtC1F,IAAK0F,EAAQS,gBAAgB7I,KAC7BT,MAAO6I,EAAQS,gBAAgB7I,KAC/B4D,KAAM5G,EAAUoL,EAAQS,gBAAgB7I,SAG1C,OACExC,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CACEC,SAAO,EACPrE,OAAK,EACL6D,YAAaA,EACbS,QAAM,EACNC,WAAS,EACTE,QAASA,EACTd,SAAUA,EACVrG,MAAOA,IAKb,SAASuJ,IAGP,IAFAjE,EAEAkE,UAAAxG,OAAA,QAAAxD,IAAAgK,UAAA,GAAAA,UAAA,GAFsC,GACtCxC,EACAwC,UAAAxG,OAAA,EAAAwG,UAAA,QAAAhK,EACA,OACE8F,EAAKmE,KAAK,SAAAC,GAAC,OACTxH,OAAOyH,KAAK3C,GAAQ4C,MAAM,SAAAzG,GAAG,OAAI0G,YAAKH,EAAGvG,IAAQ6D,EAAO7D,QACrD,OAqCH2G,6MAIJpL,MAAQ,CACNE,SAAS,EACTmL,eAAgB,KAChBC,UAAW,GACXC,cAAe,iRAGuBlM,KAAKC,MAAjB6K,oEAI1B9K,KAAKe,SAAS,CAAEF,SAAS,aACEtB,EAAQ4M,wBAAwBrB,UAAvDkB,SACJhM,KAAKe,SAAS,CAAEiL,mBAEZE,EAAgB,KAEhBE,EAAkBJ,EAAeC,UAAUjI,IAAzB,eAAAqI,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAoI,EAAApM,EAAAqM,KACpB,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAApM,EAAA0M,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAhL,MAAA,cAAS6K,EAATD,EAASC,WAAqBC,EAA9BF,EAAqB5B,QACf6B,IACFT,EAAgBU,EAAQlK,MAF5BoK,EAAAE,OAAA,SAISzN,EAAQ0N,iBAAiBL,EAAQlK,OAJ1C,wBAAAoK,EAAAI,SAAAT,EAAAzM,SADoB,gBAAAmN,GAAA,OAAAd,EAAAe,MAAApN,KAAAyL,YAAA,IAQlBQ,EAAY,kCACaG,4EAAlBiB,oBACaA,UAAhBT,SACNX,EAAUW,EAAQlK,MAAQkK,oRAEvBV,oCACmBE,EAAgB,GAAG1J,aAAzCwJ,iBAGFlM,KAAKe,SAAS,CAAEF,SAAS,EAAOoL,YAAWC,6LAI3ClM,KAAKsN,wEAGmBnM,GACxBnB,KAAKsN,oBAAoBnM,oCAGlB,IAAAoM,EACuDvN,KAAKW,MAA3DE,EADD0M,EACC1M,QAASmL,EADVuB,EACUvB,eAAgBC,EAD1BsB,EAC0BtB,UAAWC,EADrCqB,EACqCrB,cAEtCU,EAAUX,GAAaA,EAAUC,GAEvC,OACEhM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACEhF,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,KACEtF,EAAAC,EAAAC,cAACwE,EAAA,EAAO4I,SAAR,CAAiBpF,GAAI1D,IAAMC,OAAK,EAAC8I,OAAQ5M,EAAS6M,UAAQ,GACxDxN,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAQC,OAAQhE,EAASyI,UAAQ,GAC/BpJ,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,OAEF5E,EAAAC,EAAAC,cAACuN,EAAD,CAAaC,QAAS5B,EAAgBY,QAASA,OAIpDA,GACC1M,EAAAC,EAAAC,cAACkF,EAAA,EAAKC,IAAN,KACErF,EAAAC,EAAAC,cAACkF,EAAA,EAAKE,OAAN,KACEtF,EAAAC,EAAAC,cAACsI,EAAD,CAAa5H,MAAO8L,EAAQ9L,MAAMkD,IAAI,SAAAmB,GAAC,OAAIA,EAAEpF,KAAK2C,mBArEnClC,IAAMC,WA8EnC,SAASkN,EAATE,GAA2C,IAApBD,EAAoBC,EAApBD,QAAShB,EAAWiB,EAAXjB,QAC9B,OACE1M,EAAAC,EAAAC,cAACsE,EAAA,EAAKK,QAAN,MACI6H,IAAYgB,GACZ1N,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASM,aAAW,GAClBtI,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQ2D,MAAI,GACVzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAMlG,KAAK,WADb,4CAMHkK,GACC1M,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CACE/D,UAAU,iBACViI,QAAQ,OACRjE,IAAK+C,EAAQmB,QAAQC,gBAGxBJ,GACC1N,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACEhF,EAAAC,EAAAC,cAACsE,EAAA,EAAKM,OAAN,SAGIwG,EAAWoC,EAAQK,gBAAiB,CAClCC,eAAgB,UACfC,aACH,IANJ,IAOI,IAEA3C,EAAWoC,EAAQQ,MAAO,CACxBC,gBAAiB,OAChB3L,MAGPxC,EAAAC,EAAAC,cAACsE,EAAA,EAAK4J,KAAN,KAEI9C,EAAWoC,EAAQW,OAAQ,CACzBF,gBAAiB,OAChBG,QAKV5B,GACCA,EAAQ9L,MAAMkD,IAAI,SAAAC,GAAA,IAAGwK,EAAHxK,EAAGwK,KAAc/L,EAAjBuB,EAASlE,KAAQ2C,KAAjB,OAChBxC,EAAAC,EAAAC,cAAC0F,EAAD,CAAWV,IAAKqJ,EAAM1O,KAAM2C,MAE/BkL,GACC1N,EAAAC,EAAAC,cAACsE,EAAA,EAAKgK,YAAN,KACGlD,EAAWoC,EAAQe,oBAAqB,CACvCN,gBAAiB,KACjBO,eAAgB,WACfC,YAAYC,QAAQ,KAAU,cCnSpC,SAASC,KACd,OACE7O,EAAAC,EAAAC,cAAA,OAAKyF,UAAU,aACb3F,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASC,UAAQ,EAACtC,UAAU,aAC1B3F,EAAAC,EAAAC,cAAA,gFAGAF,EAAAC,EAAAC,cAAA,gDACuC,IACrCF,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMC,GAAG,YAAT,6BAFF,sDAKAzJ,EAAAC,EAAAC,cAAA,qCAC2BF,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAMC,GAAG,UAAT,sBAD3B,+ECHaqF,oLAEjB,OACE9O,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CAAeC,SAAUpF,iBACvB5J,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACEhF,EAAAC,EAAAC,cAAC+O,EAAD,MACAjP,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAW5D,UAAU,QACnB3F,EAAAC,EAAAC,cAACgP,EAAA,EAAD,KACElP,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,KACjC7O,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWjF,IAClCrK,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWpI,IAChClH,EAAAC,EAAAC,cAACiP,EAAA,EAAD,CAAOG,UAAWpF,MAGtBlK,EAAAC,EAAAC,cAAC8J,EAAD,eAduBzJ,aCHbgP,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7P,EAAAC,EAAAC,cAAC4P,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.632435ca.chunk.js","sourcesContent":["import { Pokedex } from \"pokeapi-js-wrapper\";\n\nconst pokeapi = new Pokedex({\n  protocol: \"https\"\n});\nexport default pokeapi;\n","export function titleCase(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n","import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\n\nimport { titleCase } from \"../utils\";\n\nexport default class TypeBadge extends React.Component<{\n  type: string;\n}> {\n  render() {\n    const { type } = this.props;\n    return <Label style={{ minWidth: 64 }}>{titleCase(type)}</Label>;\n  }\n}\n","import React from \"react\";\nimport { Grid, Card, Dimmer, Loader, List, Label } from \"semantic-ui-react\";\nimport { Map } from \"immutable\";\nimport cx from \"classnames\";\n\nimport pokeapi from \"../pokeapi\";\nimport { titleCase } from \"../utils\";\nimport TypeBadge from \"../components/TypeBadge\";\nimport \"./style.css\";\n\ninterface TypeSummaryProps {\n  types: Array<string>;\n}\n\ninterface TypeSummaryState {\n  typeData: { [type: string]: TypeData };\n  loading: boolean;\n}\n\ninterface TypeData {}\n\nexport default class TypeSummary extends React.Component<\n  TypeSummaryProps,\n  TypeSummaryState\n> {\n  state = {\n    typeData: {},\n    loading: false\n  };\n\n  async fetchTypeData(types = this.props.types) {\n    for (const type of types) {\n      if (this.state.typeData[type]) {\n        continue;\n      }\n      this.setState({ loading: true });\n      let newTypeData = { ...this.state.typeData };\n      newTypeData[type] = await pokeapi.getTypeByName(type);\n      this.setState({ typeData: newTypeData });\n    }\n    this.setState({ loading: false });\n  }\n\n  componentDidMount() {\n    this.fetchTypeData();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.fetchTypeData(newProps.types);\n  }\n\n  calcDamageMultipliers(): Map<string, number> {\n    let multipliers: Map<string, number> = Map();\n    for (const defenseType of this.props.types) {\n      if (!this.state.typeData[defenseType]) {\n        continue;\n      }\n      let { damage_relations } = this.state.typeData[defenseType];\n      for (const { name: attackType } of damage_relations.double_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v * 2);\n      }\n      for (const { name: attackType } of damage_relations.half_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v / 2);\n      }\n      for (const { name: attackType } of damage_relations.no_damage_from) {\n        multipliers = multipliers.set(attackType, 0);\n      }\n    }\n    return multipliers.filter(m => m !== 1);\n  }\n\n  render() {\n    const { types } = this.props;\n    const { loading } = this.state;\n\n    let multipliers = this.calcDamageMultipliers()\n      .entrySeq()\n      .map(([type, multiplier]) => ({ type, multiplier }))\n      .sort((a, b) => {\n        if (a.multiplier > b.multiplier) {\n          return -1;\n        } else if (a.multiplier < b.multiplier) {\n          return 1;\n        } else {\n          return a.type.localeCompare(b.type);\n        }\n      })\n      .toJS();\n\n    return (\n      <Card fluid>\n        <Dimmer active={loading}>\n          <Loader active={loading} />\n        </Dimmer>\n        <Card.Content>\n          <Card.Header>\n            {types.length > 0 && (\n              <>\n                {titleCase(types[0])}\n                {types.slice(1).map(t => (\n                  <span key={t}> × {titleCase(t)}</span>\n                ))}\n              </>\n            )}\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <List>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={8}>\n                  {multipliers\n                    .filter(({ multiplier }) => multiplier >= 1)\n                    .map(({ type, multiplier }) => (\n                      <List.Item key={type} className=\"type-multiplier\">\n                        <TypeBadge type={type} />\n                        <MultiplierBadge by={multiplier} />\n                      </List.Item>\n                    ))}\n                </Grid.Column>\n                <Grid.Column width={8}>\n                  {multipliers\n                    .filter(({ multiplier }) => multiplier < 1)\n                    .map(({ type, multiplier }) => (\n                      <List.Item key={type} className=\"type-multiplier\">\n                        <TypeBadge type={type} />\n                        <MultiplierBadge by={multiplier} />\n                      </List.Item>\n                    ))}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </List>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nfunction MultiplierBadge({ by }) {\n  let { text = by.toString(), color, fraction = false } = {\n    \"4\": { text: \"4x\", color: \"blue\" },\n    \"2\": { text: \"2x\", color: \"green\" },\n    \"1\": { text: \"1x\" },\n    \"0.5\": { text: \"½\", color: \"red\", fraction: true },\n    \"0.25\": { text: \"¼\", color: \"purple\", fraction: true },\n    \"0\": { text: \"0x\", color: \"black\" }\n  }[by.toString()];\n\n  return (\n    <Label\n      className={cx(\"multiplier-badge\", { fraction })}\n      circular\n      size=\"large\"\n      color={color}\n    >\n      <span>{text}</span>\n    </Label>\n  );\n}\n","import React from \"react\";\nimport {\n  Container,\n  Loader,\n  Dropdown,\n  Grid,\n  Header,\n  Segment,\n  Icon\n} from \"semantic-ui-react\";\n\nimport TypeSummary from \"./TypeSummary\";\nimport { titleCase } from \"../utils\";\nimport pokeapi from \"../pokeapi\";\n\ninterface TypesPageState {\n  typeList: null | Array<PokedexType>;\n  types: Array<string>;\n}\n\ninterface PokedexType {\n  name: string;\n}\n\nexport default class TypesPage extends React.Component<{}, TypesPageState> {\n  state = {\n    typeList: null,\n    types: [null, null]\n  };\n\n  async componentDidMount() {\n    if (this.state.typeList === null) {\n      const data = await pokeapi.getTypesList();\n      this.setState({ typeList: data.results });\n    }\n  }\n\n  handleTypes(index) {\n    if (index < 0 || index > 1) {\n      throw new Error(`Invalid index ${index}`);\n    }\n    return (e, { value }: { value: string }) => {\n      this.setState(state => {\n        state.types[index] = value;\n        let newTypes = state.types.filter(t => !!t);\n        while (newTypes.length < 2) {\n          newTypes.push(null);\n        }\n        return { types: newTypes };\n      });\n    };\n  }\n\n  render() {\n    const { types, typeList } = this.state;\n\n    if (typeList === null) {\n      return <Loader active />;\n    }\n\n    return (\n      <Segment vertical>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as=\"h2\">Defender Info</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(0)}\n                typeList={typeList}\n                value={types[0]}\n                placeholder={\"First Type\"}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(1)}\n                typeList={typeList}\n                value={types[1]}\n                placeholder={\"Second Type\"}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              {types && types.some(t => !!t) ? (\n                <TypeSummary types={types.filter(t => !!t)} />\n              ) : (\n                <Segment placeholder>\n                  <Header icon>\n                    <Icon name=\"search\" />\n                    Search for a type to begin\n                  </Header>\n                </Segment>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n}\n\nfunction TypeDropdown({ value, typeList, onChange, placeholder }) {\n  const typeDropdownOptions = typeList.map(type => ({\n    key: type.name,\n    value: type.name,\n    text: titleCase(type.name)\n  }));\n\n  return (\n    <Dropdown\n      compact\n      fluid\n      placeholder={placeholder}\n      search\n      selection\n      clearable\n      options={typeDropdownOptions}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n","import React from \"react\";\nimport { Image, Menu, Container, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nexport default function Header() {\n  const logoUrl = process.env.PUBLIC_URL + \"/logo.svg\";\n  return (\n    <Menu\n      className=\"top-nav\"\n      inverted\n      borderless\n      color=\"red\"\n      style={{ borderRadius: 0 }}\n    >\n      <Container>\n        <Menu.Item as={Link} to=\"/\">\n          <Image src={logoUrl} spaced=\"right\" className=\"logo\" />\n          Battle Buddy\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/pokemon\">\n          Pokemon\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/types\">\n          Types\n        </Menu.Item>\n        <Menu.Item\n          icon\n          position=\"right\"\n          as=\"a\"\n          href=\"https://github.com/mythmon/battle-buddy\"\n        >\n          <Icon name=\"github\" />\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\n","import React from \"react\";\nimport { Segment, Icon } from \"semantic-ui-react\";\n\nimport \"./style.css\";\n\nexport default function Footer() {\n  return (\n    <Segment vertical secondary size=\"mini\" className=\"site-footer\">\n      <p>\n        Data is from <a href=\"https://pokeapi.co/\">The PokéAPI</a>. Pokémon and\n        Pokémon character names are trademarks of Nintendo.\n      </p>\n    </Segment>\n  );\n}\n","import React from \"react\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\n\nimport \"./style.css\";\n\nexport default function MissingPage() {\n  return (\n    <Container fluid textAlign=\"center\" className=\"missing-page\">\n      <Header as=\"h1\" icon>\n        <Icon name=\"question circle\" />\n        Page not found\n        <Header.Subheader>We couldn't find that one</Header.Subheader>\n      </Header>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Loader,\n  Container,\n  Grid,\n  Dropdown,\n  Card,\n  Dimmer,\n  Image,\n  DimmerDimmable,\n  Label,\n  Header,\n  Segment,\n  Icon\n} from \"semantic-ui-react\";\nimport { titleCase } from \"../utils\";\nimport _get from \"lodash-es/get\";\n\nimport pokeapi from \"../pokeapi\";\nimport TypeSummary from \"../TypesPage/TypeSummary\";\nimport TypeBadge from \"../components/TypeBadge\";\nimport \"./style.css\";\n\ninterface PokemonPageState {\n  loading: boolean;\n  pokedex: null | Array<PokedexEntry>;\n  pokemon: null | string;\n}\n\ninterface PokedexEntry {\n  entry_number: number;\n  pokemon_species: {\n    name: string;\n  };\n}\n\nexport default class PokemonPage extends React.Component<{}, PokemonPageState> {\n  state = {\n    loading: true,\n    pokedex: null,\n    // pokemon: null\n    pokemon: \"charizard\"\n  };\n\n  constructor(props) {\n    super(props);\n    this.handlePokemon = this.handlePokemon.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.state.pokedex === null) {\n      this.setState({ loading: true });\n      const data = await pokeapi.getPokedexByName(\"kanto\");\n      this.setState({ loading: false, pokedex: data.pokemon_entries });\n    }\n  }\n\n  handlePokemon(_: any, { value }: { value: string }) {\n    this.setState({ pokemon: value });\n  }\n\n  render() {\n    const { loading, pokemon, pokedex } = this.state;\n    if (loading) {\n      return <Loader active={true} />;\n    }\n\n    return (\n      <Segment vertical>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as=\"h2\">Defender Info</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <PokemonDropdown\n                onChange={this.handlePokemon}\n                pokedex={pokedex}\n                value={pokemon}\n                placeholder=\"Defending Pokemon\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <PokemonDetails pokemon={pokemon} />\n        </Grid>\n      </Segment>\n    );\n  }\n}\n\nfunction PokemonDropdown({\n  onChange,\n  pokedex,\n  value,\n  placeholder\n}: {\n  onChange?: (ev, el) => void;\n  pokedex: Array<PokedexEntry>;\n  value: string;\n  placeholder?: string;\n}) {\n  const options = pokedex.map(pokemon => ({\n    key: pokemon.pokemon_species.name,\n    value: pokemon.pokemon_species.name,\n    text: titleCase(pokemon.pokemon_species.name)\n  }));\n\n  return (\n    <Dropdown\n      compact\n      fluid\n      placeholder={placeholder}\n      search\n      selection\n      options={options}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n\nfunction keyedValue(\n  data: Array<{ [key: string]: any }> = [],\n  search: { [key: string]: any }\n) {\n  return (\n    data.find(d =>\n      Object.keys(search).every(key => _get(d, key) == search[key])\n    ) || {}\n  );\n}\n\ninterface PokemonSpecies {\n  name: string;\n  names: Array<PokemonName>;\n  pokedex_numbers: Array<PokedexNumber>;\n}\n\ninterface PokemonName {\n  name: string;\n  language: {\n    name: string;\n  };\n}\n\ninterface PokedexNumber {\n  entry_number: number;\n  pokedex: {\n    name: string;\n  };\n}\n\ninterface PokemonVariety {}\n\ninterface PokemonDetailsProps {\n  pokemon: string;\n}\n\ninterface PokemonDetailsState {\n  loading: boolean;\n  speciesDetails: null | PokemonSpecies;\n  varieties: { [name: string]: PokemonVariety };\n  chosenVariety: null | string;\n}\n\nclass PokemonDetails extends React.Component<\n  PokemonDetailsProps,\n  PokemonDetailsState\n> {\n  state = {\n    loading: false,\n    speciesDetails: null,\n    varieties: {},\n    chosenVariety: null\n  };\n\n  async fetchPokemonDetails({ pokemon } = this.props) {\n    if (!pokemon) {\n      return;\n    }\n    this.setState({ loading: true });\n    let speciesDetails = await pokeapi.getPokemonSpeciesByName(pokemon);\n    this.setState({ speciesDetails });\n\n    let chosenVariety = null;\n\n    let varietyPromises = speciesDetails.varieties.map(\n      async ({ is_default, pokemon: variety }) => {\n        if (is_default) {\n          chosenVariety = variety.name;\n        }\n        return pokeapi.getPokemonByName(variety.name);\n      }\n    );\n    let varieties = {};\n    for (const varietyPromise of varietyPromises) {\n      const variety = await varietyPromise;\n      varieties[variety.name] = variety;\n    }\n    if (!chosenVariety) {\n      chosenVariety = await varietyPromises[0].name;\n    }\n\n    this.setState({ loading: false, varieties, chosenVariety });\n  }\n\n  componentDidMount() {\n    this.fetchPokemonDetails();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.fetchPokemonDetails(newProps);\n  }\n\n  render() {\n    const { loading, speciesDetails, varieties, chosenVariety } = this.state;\n\n    const variety = varieties && varieties[chosenVariety];\n\n    return (\n      <>\n        <Grid.Row>\n          <Grid.Column>\n            <Dimmer.Dimmable as={Card} fluid dimmed={loading} blurring>\n              <Dimmer active={loading} inverted>\n                <Loader />\n              </Dimmer>\n              <PokemonInfo species={speciesDetails} variety={variety} />\n            </Dimmer.Dimmable>\n          </Grid.Column>\n        </Grid.Row>\n        {variety && (\n          <Grid.Row>\n            <Grid.Column>\n              <TypeSummary types={variety.types.map(t => t.type.name)} />\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </>\n    );\n  }\n}\n\nfunction PokemonInfo({ species, variety }) {\n  return (\n    <Card.Content>\n      {!variety && !species && (\n        <Segment placeholder>\n          <Header icon>\n            <Icon name=\"search\" />\n            Search for a defending pokemon to begin\n          </Header>\n        </Segment>\n      )}\n      {variety && (\n        <Image\n          className=\"pokemon-sprite\"\n          floated=\"left\"\n          src={variety.sprites.front_default}\n        />\n      )}\n      {species && (\n        <>\n          <Card.Header>\n            #\n            {\n              keyedValue(species.pokedex_numbers, {\n                \"pokedex.name\": \"kanto\"\n              }).entry_number\n            }{\" \"}\n            -{\" \"}\n            {\n              keyedValue(species.names, {\n                \"language.name\": \"en\"\n              }).name\n            }\n          </Card.Header>\n          <Card.Meta>\n            {\n              keyedValue(species.genera, {\n                \"language.name\": \"en\"\n              }).genus\n            }\n          </Card.Meta>\n        </>\n      )}\n      {variety &&\n        variety.types.map(({ slot, type: { name } }) => (\n          <TypeBadge key={slot} type={name} />\n        ))}\n      {species && (\n        <Card.Description>\n          {keyedValue(species.flavor_text_entries, {\n            \"language.name\": \"en\",\n            \"version.name\": \"yellow\"\n          }).flavor_text.replace(\"\\u000C\", \" \")}\n        </Card.Description>\n      )}\n    </Card.Content>\n  );\n}\n","import React from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nexport function HomePage() {\n  return (\n    <div className=\"home-page\">\n      <Segment vertical className=\"site-info\">\n        <p>\n          Battle Buddy is a tool to help you win battles in Pokemon Let's Go.\n        </p>\n        <p>\n          There are two tools. The first shows{\" \"}\n          <Link to=\"/pokemon\">information about Pokemon</Link>, and what types\n          they are strong and weak against.\n        </p>\n        <p>\n          The second lets you pick <Link to=\"/types\">any types you want</Link>,\n          and it shows what types that combination is strong and weak against\n        </p>\n      </Segment>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport \"semantic-ui-css/semantic.css\";\nimport \"./App.css\";\nimport TypesPage from \"./TypesPage/index\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport MissingPage from \"./MissingPage\";\nimport PokemonPage from \"./PokemonPage\";\nimport { HomePage } from \"./HomePage\";\nimport { Container } from \"semantic-ui-react\";\n\nimport \"./style.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <>\n          <Header />\n          <Container className=\"root\">\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route path=\"/pokemon\" component={PokemonPage} />\n              <Route path=\"/types\" component={TypesPage} />\n              <Route component={MissingPage} />\n            </Switch>\n          </Container>\n          <Footer />\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}