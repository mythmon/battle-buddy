{"version":3,"sources":["utils.ts","pokeapi.ts","components/TypeBadge/index.tsx","components/ErrorDisplay.tsx","TypesPage/TypeSummary.tsx","TypesPage/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","titleCase","keyedValue","lodash_es_get__WEBPACK_IMPORTED_MODULE_0__","s","slice","toUpperCase","data","arguments","length","undefined","search","find","Object","keys","every","key","_get","pokeapi","Pokedex","protocol","TypeBadge","type","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","as","className","concat","React","Component","ErrorDisplay","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","_ref","error","textAlign","inverted","color","icon","name","description","source","toString","TypeSummary","state","loading","typeData","types","setState","newTypeData","getTypeByName","fetchTypeData","newProps","multipliers","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","defenseType","value","damage_relations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","double_damage_from","attackType","update","v","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","half_damage_from","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","no_damage_from","set","filter","m","calcDamageMultipliers","entrySeq","map","_ref7","_ref8","_home_mythmon_src_battle_buddy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","multiplier","sort","b","localeCompare","toJS","react__WEBPACK_IMPORTED_MODULE_11___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","fluid","Content","Header","Fragment","t","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__","Row","Column","width","_ref9","_ref10","Item","_components_TypeBadge__WEBPACK_IMPORTED_MODULE_16__","MultiplierBadge","by","_ref11","_ref12","_ref13","_$025$05$1$2$4$by$","0","text","0.25","fraction","0.5","1","2","4","_$025$05$1$2$4$by$$te","_$025$05$1$2$4$by$$fr","semantic_ui_react__WEBPACK_IMPORTED_MODULE_15__","cx","circular","size","TypesPage","typeList","getTypesList","results","checkTypes","index","_this2","Error","_event","_this2$props","match","history","params","split","newUrl","path","replace","join","push","_this$state","getTypes","react__WEBPACK_IMPORTED_MODULE_7___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","vertical","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","TypeDropdown","onChange","handleTypes","placeholder","_components_ErrorDisplay__WEBPACK_IMPORTED_MODULE_14__","data-types","JSON","stringify","_TypeSummary__WEBPACK_IMPORTED_MODULE_18__","_this3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","some","typeDefinition","console","_components_TypeBadge__WEBPACK_IMPORTED_MODULE_15__","_iterator","_ret","_ref3","options","o","compact","selection","clearable","withRouter"],"mappings":"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","file":"static/js/5.213d9610.chunk.js","sourcesContent":["import _get from \"lodash-es/get\";\n\nexport function titleCase(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n\nexport function keyedValue(\n  data: Array<{ [key: string]: any }> = [],\n  search: { [key: string]: any },\n) {\n  return (\n    data.find(d =>\n      Object.keys(search).every(key => _get(d, key) === search[key]),\n    ) || {}\n  );\n}\n","import { Pokedex } from \"pokeapi-js-wrapper\";\n\nconst pokeapi = new Pokedex({\n  protocol: \"https\",\n});\nexport default pokeapi;\n","import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\n\nimport { titleCase } from \"../../utils\";\nimport \"./style.css\";\n\nexport default class TypeBadge extends React.Component<{\n  type: string;\n}> {\n  public render() {\n    const { type } = this.props;\n    return (\n      <Label as=\"span\" className={`type ${type}`}>\n        <span className=\"inner\">{titleCase(type)}</span>\n      </Label>\n    );\n  }\n}\n","import React from \"react\";\nimport { Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport interface ErrorDetail {\n  description: string | React.ReactElement<any>;\n  source?: { toString: () => string };\n}\n\nexport default function ErrorDisplay({ error }: { error: ErrorDetail }) {\n  if (!error) {\n    return null;\n  }\n  return (\n    <Segment textAlign=\"center\" inverted color=\"red\">\n      <Header icon>\n        <Icon name=\"exclamation\" />\n        Something has gone terribly wrong.\n      </Header>\n      <p>{error.description}</p>\n      {error.source && <p className=\"subtle\">{error.source.toString()}</p>}\n    </Segment>\n  );\n}\n","import cx from \"classnames\";\nimport { Map } from \"immutable\";\nimport React from \"react\";\nimport { Card, Dimmer, Grid, Label, List } from \"semantic-ui-react\";\n\nimport TypeBadge from \"../components/TypeBadge\";\nimport pokeapi from \"../pokeapi\";\nimport { titleCase } from \"../utils\";\nimport \"./style.css\";\n\ninterface TypeSummaryProps {\n  types: string[];\n}\n\ninterface TypeSummaryState {\n  typeData: { [type: string]: TypeData };\n  loading: boolean;\n}\n\ninterface TypeData {\n  name: string;\n}\n\nexport default class TypeSummary extends React.Component<\n  TypeSummaryProps,\n  TypeSummaryState\n> {\n  public state = {\n    loading: false,\n    typeData: {},\n  };\n\n  public async fetchTypeData(types = this.props.types) {\n    for (const type of types) {\n      if (this.state.typeData[type]) {\n        continue;\n      }\n      this.setState({ loading: true });\n      const newTypeData = { ...this.state.typeData };\n      newTypeData[type] = await pokeapi.getTypeByName(type);\n      this.setState({ typeData: newTypeData });\n    }\n    this.setState({ loading: false });\n  }\n\n  public componentDidMount() {\n    this.fetchTypeData();\n  }\n\n  public componentWillReceiveProps(newProps) {\n    this.fetchTypeData(newProps.types);\n  }\n\n  public calcDamageMultipliers(): Map<string, number> {\n    let multipliers: Map<string, number> = Map();\n    for (const defenseType of this.props.types) {\n      if (!this.state.typeData[defenseType]) {\n        continue;\n      }\n      const { damage_relations } = this.state.typeData[defenseType];\n      for (const { name: attackType } of damage_relations.double_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v * 2);\n      }\n      for (const { name: attackType } of damage_relations.half_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v / 2);\n      }\n      for (const { name: attackType } of damage_relations.no_damage_from) {\n        multipliers = multipliers.set(attackType, 0);\n      }\n    }\n    return multipliers.filter(m => m !== 1);\n  }\n\n  public render() {\n    const { types } = this.props;\n    const { loading } = this.state;\n\n    const multipliers = this.calcDamageMultipliers()\n      .entrySeq()\n      .map(([type, multiplier]) => ({ type, multiplier }))\n      .sort((a, b) => {\n        if (a.multiplier > b.multiplier) {\n          return -1;\n        } else if (a.multiplier < b.multiplier) {\n          return 1;\n        } else {\n          return a.type.localeCompare(b.type);\n        }\n      })\n      .toJS();\n\n    return (\n      <Card fluid>\n        <Card.Content>\n          <Card.Header>\n            {types.length > 0 && (\n              <>\n                {titleCase(types[0])}\n                {types.slice(1).map(t => (\n                  <span key={t}> × {titleCase(t)}</span>\n                ))}\n              </>\n            )}\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <List>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={8}>\n                  {multipliers\n                    .filter(({ multiplier }) => multiplier >= 1)\n                    .map(({ type, multiplier }) => (\n                      <List.Item key={type} className=\"type-multiplier\">\n                        <TypeBadge type={type} />\n                        <MultiplierBadge by={multiplier} />\n                      </List.Item>\n                    ))}\n                </Grid.Column>\n                <Grid.Column width={8}>\n                  {multipliers\n                    .filter(({ multiplier }) => multiplier < 1)\n                    .map(({ type, multiplier }) => (\n                      <List.Item key={type} className=\"type-multiplier\">\n                        <TypeBadge type={type} />\n                        <MultiplierBadge by={multiplier} />\n                      </List.Item>\n                    ))}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </List>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nfunction MultiplierBadge({ by }) {\n  const { text = by.toString(), color, fraction = false } = {\n    \"0\": { text: \"0x\", color: \"black\" },\n    \"0.25\": { text: \"¼\", color: \"purple\", fraction: true },\n    \"0.5\": { text: \"½\", color: \"red\", fraction: true },\n    \"1\": { text: \"1x\" },\n    \"2\": { text: \"2x\", color: \"green\" },\n    \"4\": { text: \"4x\", color: \"blue\" },\n  }[by.toString()];\n\n  return (\n    <Label\n      className={cx(\"multiplier-badge\", { fraction })}\n      circular\n      size=\"large\"\n      color={color}\n    >\n      <span>{text}</span>\n    </Label>\n  );\n}\n","import { History, Location } from \"history\";\nimport React from \"react\";\nimport { match as matchType, withRouter } from \"react-router-dom\";\nimport { Dropdown, Grid, Header, Icon, Segment } from \"semantic-ui-react\";\n\nimport ErrorDisplay, { ErrorDetail } from \"../components/ErrorDisplay\";\nimport TypeBadge from \"../components/TypeBadge\";\nimport pokeapi from \"../pokeapi\";\nimport { titleCase } from \"../utils\";\nimport TypeSummary from \"./TypeSummary\";\n\ninterface TypesPageProps {\n  match: matchType<{ types?: string }>;\n  location: Location;\n  history: History;\n}\n\ninterface TypesPageState {\n  error: null | ErrorDetail;\n  typeList: null | PokedexType[];\n}\n\ninterface PokedexType {\n  name: string;\n}\n\nclass TypesPage extends React.Component<TypesPageProps, TypesPageState> {\n  public state = {\n    error: null,\n    typeList: null,\n  };\n\n  public async componentDidMount() {\n    if (this.state.typeList === null) {\n      const data = await pokeapi.getTypesList();\n      this.setState({ typeList: data.results });\n    }\n    this.checkTypes();\n  }\n\n  public componentWillReceiveProps(newProps) {\n    this.checkTypes(newProps);\n  }\n\n  public handleTypes(index) {\n    if (index < 0 || index > 1) {\n      throw new Error(`Invalid index ${index}`);\n    }\n    return (_event, { value }: { value: string }) => {\n      const { match, history } = this.props;\n      let types = (match.params.types || \"\").split(\",\");\n      types[index] = value;\n      types = types.filter(t => !!t);\n      const newUrl = match.path.replace(\":types?\", types.join(\",\"));\n      history.push(newUrl);\n    };\n  }\n\n  public render() {\n    const { typeList, error } = this.state;\n    const types = this.getTypes();\n\n    return (\n      <Segment vertical>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as=\"h2\">Defender Info</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(0)}\n                typeList={typeList}\n                value={types[0]}\n                placeholder={\"First Type\"}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(1)}\n                typeList={typeList}\n                value={types[1]}\n                placeholder={\"Second Type\"}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              {error ? (\n                <ErrorDisplay error={error} />\n              ) : types.length > 0 ? (\n                <>\n                  <div data-types={JSON.stringify(types)} />\n                  <TypeSummary types={types} />\n                </>\n              ) : (\n                <Segment placeholder>\n                  <Header icon>\n                    <Icon name=\"search\" />\n                    Search for a type to begin\n                  </Header>\n                </Segment>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n\n  private getTypes({ match } = this.props) {\n    return (match.params.types || \"\")\n      .split(\",\")\n      .slice(0, 2)\n      .filter(t => !!t);\n  }\n\n  private checkTypes(props = this.props) {\n    const { typeList } = this.state;\n    if (!typeList) {\n      return;\n    }\n    const types = this.getTypes(props);\n    for (const type of types) {\n      if (!typeList.some(typeDefinition => typeDefinition.name === type)) {\n        // tslint:disable-next-line: no-console\n        console.error(\"Invalid type:\", type, \"not included in\", typeList);\n        this.setState({\n          error: {\n            description: (\n              <>\n                <TypeBadge type={type} /> isn't a valid type\n              </>\n            ),\n          },\n        });\n        return;\n      }\n    }\n    this.setState({ error: null });\n  }\n}\n\nexport default withRouter(TypesPage);\n\nfunction TypeDropdown({ value, typeList, onChange, placeholder }) {\n  let options;\n  if (typeList) {\n    options = typeList.map(type => ({\n      key: type.name,\n      text: titleCase(type.name),\n      value: type.name,\n    }));\n  } else {\n    options = [];\n  }\n  if (value && !options.some(o => o.value === value)) {\n    options.push({ key: value, text: titleCase(value), value });\n  }\n  options.sort((a: { text: string }, b: { text: string }) =>\n    a.text.localeCompare(b.text),\n  );\n\n  return (\n    <Dropdown\n      compact\n      fluid\n      placeholder={placeholder}\n      search\n      selection\n      clearable\n      options={options}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n"],"sourceRoot":""}