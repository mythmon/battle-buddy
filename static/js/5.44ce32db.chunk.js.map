{"version":3,"sources":["utils.ts","pokeapi.ts","components/TypeBadge/index.tsx","components/ErrorDisplay.tsx","TypesPage/TypeSummary.tsx","TypesPage/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","titleCase","keyedValue","lodash_es_get__WEBPACK_IMPORTED_MODULE_0__","s","split","map","p","slice","toUpperCase","join","data","arguments","length","undefined","search","find","Object","keys","every","key","_get","pokeapi","Pokedex","protocol","TypeBadge","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","_ref","type","a","createElement","as","className","concat","Placeholder","ErrorDisplay","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","error","textAlign","inverted","color","icon","name","description","source","toString","TypeSummary","state","loading","typeData","this","props","types","setState","newTypeData","getTypeByName","fetchTypeData","newProps","multipliers","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","defenseType","value","damage_relations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","double_damage_from","attackType","update","v","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","half_damage_from","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","no_damage_from","set","filter","m","react__WEBPACK_IMPORTED_MODULE_11___default","calcDamageMultipliers","entrySeq","_ref8","_ref9","_github_workspace_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","multiplier","sort","b","localeCompare","toJS","semantic_ui_react__WEBPACK_IMPORTED_MODULE_12__","fluid","Content","Header","Fragment","t","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__","Row","Column","width","_ref10","_ref11","Item","_components_TypeBadge__WEBPACK_IMPORTED_MODULE_17__","MultiplierBadge","by","_ref12","_ref13","React","Component","semantic_ui_react__WEBPACK_IMPORTED_MODULE_15__","column","idx","multiplierDisplayData","0","text","0.25","fraction","0.5","1","2","4","_ref14","_multiplierDisplayDat","_multiplierDisplayDat2","_multiplierDisplayDat3","semantic_ui_react__WEBPACK_IMPORTED_MODULE_16__","cx","circular","size","Image","TypesPage","typeList","getTypesList","results","checkTypes","index","_this2","Error","event","_this2$props","match","history","params","newUrl","path","replace","push","_this$state","getTypes","react__WEBPACK_IMPORTED_MODULE_7___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","vertical","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_11__","TypeDropdown","onChange","handleTypes","placeholder","_components_ErrorDisplay__WEBPACK_IMPORTED_MODULE_14__","data-types","JSON","stringify","_TypeSummary__WEBPACK_IMPORTED_MODULE_18__","_this3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","some","typeDefinition","console","_components_TypeBadge__WEBPACK_IMPORTED_MODULE_15__","_iterator","_ret","_ref3","options","o","compact","selection","clearable","withRouter"],"mappings":"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","file":"static/js/5.44ce32db.chunk.js","sourcesContent":["import _get from \"lodash-es/get\";\n\nexport function titleCase(s: string): string {\n  return s\n    .split(\" \")\n    .map(p => p.slice(0, 1).toUpperCase() + p.slice(1))\n    .join(\" \");\n}\n\nexport function keyedValue(\n  data: Array<{ [key: string]: any }> = [],\n  search: { [key: string]: any },\n): any {\n  return (\n    data.find(d =>\n      Object.keys(search).every(key => _get(d, key) === search[key]),\n    ) || {}\n  );\n}\n","import { Pokedex } from \"pokeapi-js-wrapper\";\n\nconst pokeapi = new Pokedex({\n  protocol: \"https\",\n});\nexport default pokeapi;\n","import React from \"react\";\nimport { Label, Placeholder } from \"semantic-ui-react\";\n\nimport { titleCase } from \"../../utils\";\nimport \"./style.css\";\n\ninterface TypeBadgeProps {\n  type: string;\n}\n\nexport default function TypeBadge({ type }: TypeBadgeProps) {\n  return (\n    <Label as=\"span\" className={`type ${type}`}>\n      <span className=\"inner\">{titleCase(type)}</span>\n    </Label>\n  );\n}\n\nTypeBadge.Placeholder = () => {\n  return <Placeholder className=\"type placeholder\" as=\"span\" />;\n};\n","import React from \"react\";\nimport { Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport interface ErrorDetail {\n  description: string | React.ReactElement<any>;\n  source?: { toString: () => string };\n}\n\nexport default function ErrorDisplay({ error }: { error: ErrorDetail }) {\n  if (!error) {\n    return null;\n  }\n  return (\n    <Segment textAlign=\"center\" inverted color=\"red\">\n      <Header icon>\n        <Icon name=\"exclamation\" />\n        Something has gone terribly wrong.\n      </Header>\n      <p>{error.description}</p>\n      {error.source && <p className=\"subtle\">{error.source.toString()}</p>}\n    </Segment>\n  );\n}\n","import cx from \"classnames\";\nimport { Map } from \"immutable\";\nimport React from \"react\";\nimport {\n  Card,\n  Dimmer,\n  Grid,\n  Label,\n  List,\n  Placeholder,\n} from \"semantic-ui-react\";\n\nimport { PokemonType } from \"pokeapi-js-wrapper\";\nimport TypeBadge from \"../components/TypeBadge\";\nimport pokeapi from \"../pokeapi\";\nimport { titleCase } from \"../utils\";\nimport \"./style.css\";\n\ninterface TypeSummaryProps {\n  types: Array<string>;\n}\n\ninterface TypeCollection {\n  [name: string]: PokemonType;\n}\n\ninterface TypeSummaryState {\n  typeData: TypeCollection;\n  loading: boolean;\n}\n\nexport default class TypeSummary extends React.Component<\n  TypeSummaryProps,\n  TypeSummaryState\n> {\n  // tslint:disable-next-line:variable-name\n  public static Placeholder = () => {\n    return (\n      <Card fluid>\n        <Placeholder>\n          <Card.Content>\n            <Card.Header>\n              <Placeholder.Header />\n            </Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <List>\n              <Grid>\n                <Grid.Row>\n                  {[0, 1].map(column => (\n                    <Grid.Column key={column} width={8}>\n                      {[0, 1, 2].map(idx => (\n                        <List.Item key={idx} className=\"type-multiplier\">\n                          <TypeBadge.Placeholder />\n                          <MultiplierBadge.Placeholder />\n                        </List.Item>\n                      ))}\n                    </Grid.Column>\n                  ))}\n                </Grid.Row>\n              </Grid>\n            </List>\n          </Card.Content>\n        </Placeholder>\n      </Card>\n    );\n  };\n\n  public state = {\n    loading: false,\n    typeData: {},\n  };\n\n  public async fetchTypeData({ types }: TypeSummaryProps = this.props) {\n    const { typeData }: { typeData: TypeCollection } = this.state;\n    for (const type of types) {\n      if (typeData[type]) {\n        continue;\n      }\n      this.setState({ loading: true });\n      const newTypeData: TypeCollection = { ...this.state.typeData };\n      newTypeData[type] = await pokeapi.getTypeByName(type);\n      this.setState({ typeData: newTypeData });\n    }\n    this.setState({ loading: false });\n  }\n\n  public componentDidMount() {\n    this.fetchTypeData();\n  }\n\n  public componentWillReceiveProps(newProps: TypeSummaryProps) {\n    this.fetchTypeData(newProps);\n  }\n\n  public calcDamageMultipliers(): Map<string, number> {\n    const { typeData }: { typeData: TypeCollection } = this.state;\n    let multipliers: Map<string, number> = Map();\n    for (const defenseType of this.props.types) {\n      if (!typeData[defenseType]) {\n        continue;\n      }\n      const { damage_relations } = typeData[defenseType];\n      for (const { name: attackType } of damage_relations.double_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v * 2);\n      }\n      for (const { name: attackType } of damage_relations.half_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v / 2);\n      }\n      for (const { name: attackType } of damage_relations.no_damage_from) {\n        multipliers = multipliers.set(attackType, 0);\n      }\n    }\n    return multipliers.filter(m => m !== 1);\n  }\n\n  public render() {\n    const { types } = this.props;\n    const { loading } = this.state;\n\n    if (loading) {\n      return <TypeSummary.Placeholder />;\n    }\n\n    const multipliers = this.calcDamageMultipliers()\n      .entrySeq()\n      .map(([type, multiplier]) => ({ type, multiplier }))\n      .sort((a, b) => {\n        if (a.multiplier > b.multiplier) {\n          return -1;\n        } else if (a.multiplier < b.multiplier) {\n          return 1;\n        } else {\n          return a.type.localeCompare(b.type);\n        }\n      })\n      .toJS();\n\n    return (\n      <Card fluid>\n        <Card.Content>\n          <Card.Header>\n            {types.length > 0 && (\n              <>\n                {titleCase(types[0])}\n                {types.slice(1).map(t => (\n                  <span key={t}> × {titleCase(t)}</span>\n                ))}\n              </>\n            )}\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <List>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={8}>\n                  {multipliers\n                    .filter(({ multiplier }) => multiplier >= 1)\n                    .map(({ type, multiplier }) => (\n                      <List.Item key={type} className=\"type-multiplier\">\n                        <TypeBadge type={type} />\n                        <MultiplierBadge by={multiplier} />\n                      </List.Item>\n                    ))}\n                </Grid.Column>\n                <Grid.Column width={8}>\n                  {multipliers\n                    .filter(({ multiplier }) => multiplier < 1)\n                    .map(({ type, multiplier }) => (\n                      <List.Item key={type} className=\"type-multiplier\">\n                        <TypeBadge type={type} />\n                        <MultiplierBadge by={multiplier} />\n                      </List.Item>\n                    ))}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </List>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\ntype semanticUiColor = \"black\" | \"purple\" | \"red\" | \"green\" | \"blue\";\nconst multiplierDisplayData: {\n  [mult: string]: { text: string; color?: semanticUiColor; fraction?: boolean };\n} = {\n  \"0\": { text: \"0x\", color: \"black\" },\n  \"0.25\": { text: \"¼\", color: \"purple\", fraction: true },\n  \"0.5\": { text: \"½\", color: \"red\", fraction: true },\n  \"1\": { text: \"1x\" },\n  \"2\": { text: \"2x\", color: \"green\" },\n  \"4\": { text: \"4x\", color: \"blue\" },\n};\n\nfunction MultiplierBadge({ by }: { by: number }) {\n  const {\n    text = by.toString(),\n    color,\n    fraction = false,\n  } = multiplierDisplayData[by.toString()];\n\n  return (\n    <Label\n      className={cx(\"multiplier-badge\", { fraction })}\n      circular\n      size=\"large\"\n      color={color}\n    >\n      <span>{text}</span>\n    </Label>\n  );\n}\n\nMultiplierBadge.Placeholder = () => {\n  return <Placeholder.Image className=\"multiplier-badge placeholder\" />;\n};\n","import { History, Location } from \"history\";\nimport { NamedResource } from \"pokeapi-js-wrapper\";\nimport React, { SyntheticEvent } from \"react\";\nimport { match as matchType, withRouter } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownProps,\n  Grid,\n  Header,\n  Icon,\n  Segment,\n  StrictDropdownItemProps,\n} from \"semantic-ui-react\";\n\nimport ErrorDisplay, { ErrorDetail } from \"../components/ErrorDisplay\";\nimport TypeBadge from \"../components/TypeBadge\";\nimport pokeapi from \"../pokeapi\";\nimport { titleCase } from \"../utils\";\nimport TypeSummary from \"./TypeSummary\";\n\ninterface TypesPageProps {\n  match: matchType<{ types?: string }>;\n  location: Location;\n  history: History;\n}\n\ninterface TypesPageState {\n  error: null | ErrorDetail;\n  typeList: Array<PokedexType>;\n}\n\ninterface PokedexType {\n  name: string;\n}\n\nclass TypesPage extends React.Component<TypesPageProps, TypesPageState> {\n  public state = {\n    error: null,\n    typeList: [],\n  };\n\n  public async componentDidMount() {\n    if (this.state.typeList === null) {\n      const data = await pokeapi.getTypesList();\n      this.setState({ typeList: data.results });\n    }\n    this.checkTypes();\n  }\n\n  public componentWillReceiveProps(newProps: TypesPageProps) {\n    this.checkTypes(newProps);\n  }\n\n  public handleTypes(index: number) {\n    if (index < 0 || index > 1) {\n      throw new Error(`Invalid index ${index}`);\n    }\n    return (event: SyntheticEvent, { value }: DropdownProps) => {\n      const { match, history } = this.props;\n      let types = (match.params.types || \"\").split(\",\");\n      types[index] = value as string;\n      types = types.filter(t => !!t);\n      const newUrl = match.path.replace(\":types?\", types.join(\",\"));\n      history.push(newUrl);\n    };\n  }\n\n  public render() {\n    const { typeList, error } = this.state;\n    const types = this.getTypes();\n\n    return (\n      <Segment vertical>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as=\"h2\">Defender Info</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(0)}\n                typeList={typeList}\n                value={types[0]}\n                placeholder={\"First Type\"}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(1)}\n                typeList={typeList}\n                value={types[1]}\n                placeholder={\"Second Type\"}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              {error ? (\n                <ErrorDisplay error={error} />\n              ) : types.length > 0 ? (\n                <>\n                  <div data-types={JSON.stringify(types)} />\n                  <TypeSummary types={types} />\n                </>\n              ) : (\n                <Segment placeholder>\n                  <Header icon>\n                    <Icon name=\"search\" />\n                    Search for a type to begin\n                  </Header>\n                </Segment>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n\n  private getTypes({ match } = this.props) {\n    return (match.params.types || \"\")\n      .split(\",\")\n      .slice(0, 2)\n      .filter(t => !!t);\n  }\n\n  private checkTypes(props = this.props) {\n    const { typeList } = this.state;\n    if (!typeList) {\n      return;\n    }\n    const types = this.getTypes(props);\n    for (const type of types) {\n      if (\n        !typeList.some(\n          (typeDefinition: NamedResource) => typeDefinition.name === type,\n        )\n      ) {\n        // tslint:disable-next-line: no-console\n        console.error(\"Invalid type:\", type, \"not included in\", typeList);\n        this.setState({\n          error: {\n            description: (\n              <>\n                <TypeBadge type={type} /> isn't a valid type\n              </>\n            ),\n          },\n        });\n        return;\n      }\n    }\n    this.setState({ error: null });\n  }\n}\n\nexport default withRouter(TypesPage);\n\ninterface TypeDropdownProps {\n  value: string;\n  typeList: null | Array<NamedResource>;\n  onChange?: (ev: SyntheticEvent, props: DropdownProps) => void;\n  placeholder?: string;\n}\n\nfunction TypeDropdown({\n  value,\n  typeList,\n  onChange,\n  placeholder,\n}: TypeDropdownProps) {\n  let options: Array<StrictDropdownItemProps>;\n  if (typeList) {\n    options = typeList.map(type => ({\n      key: type.name,\n      text: titleCase(type.name),\n      value: type.name,\n    }));\n  } else {\n    options = [];\n  }\n  if (value && !options.some(o => o.value === value)) {\n    options.push({ text: titleCase(value), value });\n  }\n  options.sort((a: StrictDropdownItemProps, b: StrictDropdownItemProps) => {\n    return (a.text || \"\")\n      .toString()\n      .localeCompare((b.text || \"\").toString() || \"\");\n  });\n\n  return (\n    <Dropdown\n      compact\n      fluid\n      placeholder={placeholder}\n      search\n      selection\n      clearable\n      options={options}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n"],"sourceRoot":""}