{"version":3,"sources":["pokeapi.ts","utils.ts","TypesPage/TypeSummary.tsx","TypesPage/index.tsx","components/Header/index.tsx","MissingPage/index.tsx","PokemonPage/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["pokeapi","Pokedex","protocol","titleCase","s","slice","toUpperCase","TypeSummary","state","typeData","loading","types","this","props","type","setState","newTypeData","getTypeByName","fetchTypeData","newProps","multipliers","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","defenseType","value","damage_relations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","double_damage_from","attackType","name","update","v","err","return","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","half_damage_from","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","no_damage_from","set","calcDamageMultipliers","entrySeq","map","_ref7","_ref8","Object","slicedToArray","multiplier","sort","a","b","localeCompare","toJS","react_default","createElement","Card","fluid","Dimmer","active","Loader","Content","Header","length","Fragment","t","key","_ref9","React","Component","TypesPage","typeList","getTypesList","data","results","index","_this2","Error","concat","e","_ref","newTypes","filter","push","_this$state","Container","Grid","Row","Column","as","width","TypeDropdown","onChange","handleTypes","placeholder","some","TypeSummary_TypeSummary","Segment","icon","Icon","_ref2","typeDropdownOptions","text","Dropdown","compact","search","selection","clearable","options","Menu","className","inverted","borderless","color","style","borderRadius","Item","Link","to","Image","src","process","spaced","MissingPage","textAlign","Subheader","PokemonPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pokedex","pokemon","handlePokemon","bind","assertThisInitialized","getPokedexByName","pokemon_entries","_","PokemonDropdown","PokemonPage_PokemonDetails","pokemon_species","keyedValue","arguments","find","d","keys","every","_get","PokemonDetails","speciesDetails","varieties","chosenVariety","getPokemonSpeciesByName","varietyPromises","_ref5","asyncToGenerator","regenerator_default","mark","_callee2","_ref4","is_default","variety","wrap","_context2","prev","abrupt","getPokemonByName","stop","_x","apply","varietyPromise","fetchPokemonDetails","_this$state2","Dimmable","dimmed","blurring","PokemonInfo","species","_ref6","floated","sprites","front_default","pokedex_numbers","pokedex.name","entry_number","names","language.name","Meta","genera","genus","slot","PokemonPage_TypeBadge","Description","flavor_text_entries","version.name","flavor_text","replace","TypeBadge","Label","App","BrowserRouter","basename","components_Header","Switch","Route","exact","path","Redirect","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c2f7e17.chunk.js","sourcesContent":["import { Pokedex } from \"pokeapi-js-wrapper\";\n\nconst pokeapi = new Pokedex({\n  protocol: \"https\"\n});\nexport default pokeapi;\n","export function titleCase(s: string) {\n  return s.slice(0, 1).toUpperCase() + s.slice(1);\n}\n","import React from \"react\";\nimport { Grid, Card, Dimmer, Loader } from \"semantic-ui-react\";\nimport { Map } from \"immutable\";\n\nimport pokeapi from \"../pokeapi\";\nimport { titleCase } from \"../utils\";\n\ninterface TypeSummaryProps {\n  types: Array<string>;\n}\n\ninterface TypeSummaryState {\n  typeData: { [type: string]: TypeData };\n  loading: boolean;\n}\n\ninterface TypeData {}\n\nexport default class TypeSummary extends React.Component<\n  TypeSummaryProps,\n  TypeSummaryState\n> {\n  state = {\n    typeData: {},\n    loading: false\n  };\n\n  async fetchTypeData(types = this.props.types) {\n    for (const type of types) {\n      if (this.state.typeData[type]) {\n        continue;\n      }\n      this.setState({ loading: true });\n      let newTypeData = { ...this.state.typeData };\n      newTypeData[type] = await pokeapi.getTypeByName(type);\n      this.setState({ typeData: newTypeData });\n    }\n    this.setState({ loading: false });\n  }\n\n  componentDidMount() {\n    this.fetchTypeData();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.fetchTypeData(newProps.types);\n  }\n\n  calcDamageMultipliers(): Map<string, number> {\n    let multipliers: Map<string, number> = Map();\n    for (const defenseType of this.props.types) {\n      if (!this.state.typeData[defenseType]) {\n        continue;\n      }\n      let { damage_relations } = this.state.typeData[defenseType];\n      for (const { name: attackType } of damage_relations.double_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v * 2);\n      }\n      for (const { name: attackType } of damage_relations.half_damage_from) {\n        multipliers = multipliers.update(attackType, 1, (v: number) => v / 2);\n      }\n      for (const { name: attackType } of damage_relations.no_damage_from) {\n        multipliers = multipliers.set(attackType, 0);\n      }\n    }\n    return multipliers;\n  }\n\n  render() {\n    const { types } = this.props;\n    const { loading } = this.state;\n\n    let multipliers = this.calcDamageMultipliers()\n      .entrySeq()\n      .map(([type, multiplier]) => ({ type, multiplier }))\n      .sort((a, b) => {\n        if (a.multiplier > b.multiplier) {\n          return -1;\n        } else if (a.multiplier < b.multiplier) {\n          return 1;\n        } else {\n          return a.type.localeCompare(b.type);\n        }\n      })\n      .toJS();\n\n    return (\n      <Card fluid>\n        <Dimmer active={loading}>\n          <Loader active={loading} />\n        </Dimmer>\n        <Card.Content>\n          <Card.Header>\n            {types.length > 0 && (\n              <>\n                {titleCase(types[0])}\n                {types.slice(1).map(t => (\n                  <span key={t}> × {titleCase(t)}</span>\n                ))}\n              </>\n            )}\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <ul>\n            {multipliers.map(({ type, multiplier }) => (\n              <li key={type}>\n                {type}: {multiplier}x\n              </li>\n            ))}\n          </ul>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Container,\n  Loader,\n  Dropdown,\n  Grid,\n  Header,\n  Segment,\n  Icon\n} from \"semantic-ui-react\";\n\nimport TypeSummary from \"./TypeSummary\";\nimport { titleCase } from \"../utils\";\nimport pokeapi from \"../pokeapi\";\n\ninterface TypesPageState {\n  typeList: null | Array<PokedexType>;\n  types: Array<string>;\n}\n\ninterface PokedexType {\n  name: string;\n}\n\nexport default class TypesPage extends React.Component<{}, TypesPageState> {\n  state = {\n    typeList: null,\n    types: [null, null]\n  };\n\n  async componentDidMount() {\n    if (this.state.typeList === null) {\n      const data = await pokeapi.getTypesList();\n      this.setState({ typeList: data.results });\n    }\n  }\n\n  handleTypes(index) {\n    if (index < 0 || index > 1) {\n      throw new Error(`Invalid index ${index}`);\n    }\n    return (e, { value }: { value: string }) => {\n      this.setState(state => {\n        state.types[index] = value;\n        let newTypes = state.types.filter(t => !!t);\n        while (newTypes.length < 2) {\n          newTypes.push(null);\n        }\n        return { types: newTypes };\n      });\n    };\n  }\n\n  render() {\n    const { types, typeList } = this.state;\n\n    if (typeList === null) {\n      return <Loader active />;\n    }\n\n    return (\n      <Container>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as=\"h2\">Defender</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(0)}\n                typeList={typeList}\n                value={types[0]}\n                placeholder={\"First Type\"}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <TypeDropdown\n                onChange={this.handleTypes(1)}\n                typeList={typeList}\n                value={types[1]}\n                placeholder={\"Second Type\"}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              {types && types.some(t => !!t) ? (\n                <TypeSummary types={types.filter(t => !!t)} />\n              ) : (\n                <Segment placeholder>\n                  <Header icon>\n                    <Icon name=\"search\" />\n                    Search for a type to begin\n                  </Header>\n                </Segment>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nfunction TypeDropdown({ value, typeList, onChange, placeholder }) {\n  const typeDropdownOptions = typeList.map(type => ({\n    key: type.name,\n    value: type.name,\n    text: titleCase(type.name)\n  }));\n\n  return (\n    <Dropdown\n      compact\n      fluid\n      placeholder={placeholder}\n      search\n      selection\n      clearable\n      options={typeDropdownOptions}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n","import React from \"react\";\nimport { Image, Menu, Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nfunction Header() {\n  const logoUrl = process.env.PUBLIC_URL + \"/logo.svg\";\n  return (\n    <Menu\n      className=\"top-nav\"\n      inverted\n      borderless\n      color=\"red\"\n      style={{ borderRadius: 0 }}\n    >\n      <Container>\n        <Menu.Item as={Link} to=\"/\">\n          <Image src={logoUrl} spaced=\"right\" className=\"logo\" />\n          Battle Buddy\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/pokemon\">\n          Pokemon\n        </Menu.Item>\n        <Menu.Item as={Link} to=\"/types\">\n          Types\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Header, Icon } from \"semantic-ui-react\";\n\nimport \"./style.css\";\n\nexport default function MissingPage() {\n  return (\n    <Container fluid textAlign=\"center\" className=\"missing-page\">\n      <Header as=\"h1\" icon>\n        <Icon name=\"question circle\" />\n        Page not found\n        <Header.Subheader>We couldn't find that one</Header.Subheader>\n      </Header>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Loader,\n  Container,\n  Grid,\n  Dropdown,\n  Card,\n  Dimmer,\n  Image,\n  DimmerDimmable,\n  Label,\n  Header,\n  Segment,\n  Icon\n} from \"semantic-ui-react\";\nimport { titleCase } from \"../utils\";\nimport _get from \"lodash-es/get\";\n\nimport pokeapi from \"../pokeapi\";\nimport TypeSummary from \"../TypesPage/TypeSummary\";\nimport \"./style.css\";\n\ninterface PokemonPageState {\n  loading: boolean;\n  pokedex: null | Array<PokedexEntry>;\n  pokemon: null | string;\n}\n\ninterface PokedexEntry {\n  entry_number: number;\n  pokemon_species: {\n    name: string;\n  };\n}\n\nexport default class PokemonPage extends React.Component<{}, PokemonPageState> {\n  state = {\n    loading: true,\n    pokedex: null,\n    pokemon: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.handlePokemon = this.handlePokemon.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.state.pokedex === null) {\n      this.setState({ loading: true });\n      const data = await pokeapi.getPokedexByName(\"kanto\");\n      this.setState({ loading: false, pokedex: data.pokemon_entries });\n    }\n  }\n\n  handlePokemon(_: any, { value }: { value: string }) {\n    this.setState({ pokemon: value });\n  }\n\n  render() {\n    const { loading, pokemon, pokedex } = this.state;\n    if (loading) {\n      return <Loader active={true} />;\n    }\n\n    return (\n      <Container>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as=\"h2\">Defender</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <PokemonDropdown\n                onChange={this.handlePokemon}\n                pokedex={pokedex}\n                value={pokemon}\n                placeholder=\"Defending Pokemon\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <PokemonDetails pokemon={pokemon} />\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nfunction PokemonDropdown({\n  onChange,\n  pokedex,\n  value,\n  placeholder\n}: {\n  onChange?: (ev, el) => void;\n  pokedex: Array<PokedexEntry>;\n  value: string;\n  placeholder?: string;\n}) {\n  const options = pokedex.map(pokemon => ({\n    key: pokemon.pokemon_species.name,\n    value: pokemon.pokemon_species.name,\n    text: titleCase(pokemon.pokemon_species.name)\n  }));\n\n  return (\n    <Dropdown\n      compact\n      fluid\n      placeholder={placeholder}\n      search\n      selection\n      options={options}\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n\nfunction keyedValue(\n  data: Array<{ [key: string]: any }> = [],\n  search: { [key: string]: any }\n) {\n  return (\n    data.find(d =>\n      Object.keys(search).every(key => _get(d, key) == search[key])\n    ) || {}\n  );\n}\n\ninterface PokemonSpecies {\n  name: string;\n  names: Array<PokemonName>;\n  pokedex_numbers: Array<PokedexNumber>;\n}\n\ninterface PokemonName {\n  name: string;\n  language: {\n    name: string;\n  };\n}\n\ninterface PokedexNumber {\n  entry_number: number;\n  pokedex: {\n    name: string;\n  };\n}\n\ninterface PokemonVariety {}\n\ninterface PokemonDetailsProps {\n  pokemon: string;\n}\n\ninterface PokemonDetailsState {\n  loading: boolean;\n  speciesDetails: null | PokemonSpecies;\n  varieties: { [name: string]: PokemonVariety };\n  chosenVariety: null | string;\n}\n\nclass PokemonDetails extends React.Component<\n  PokemonDetailsProps,\n  PokemonDetailsState\n> {\n  state = {\n    loading: false,\n    speciesDetails: null,\n    varieties: {},\n    chosenVariety: null\n  };\n\n  async fetchPokemonDetails({ pokemon } = this.props) {\n    if (!pokemon) {\n      return;\n    }\n    this.setState({ loading: true });\n    let speciesDetails = await pokeapi.getPokemonSpeciesByName(pokemon);\n    this.setState({ speciesDetails });\n\n    let chosenVariety = null;\n\n    let varietyPromises = speciesDetails.varieties.map(\n      async ({ is_default, pokemon: variety }) => {\n        if (is_default) {\n          chosenVariety = variety.name;\n        }\n        return pokeapi.getPokemonByName(variety.name);\n      }\n    );\n    let varieties = {};\n    for (const varietyPromise of varietyPromises) {\n      const variety = await varietyPromise;\n      varieties[variety.name] = variety;\n    }\n    if (!chosenVariety) {\n      chosenVariety = await varietyPromises[0].name;\n    }\n\n    this.setState({ loading: false, varieties, chosenVariety });\n  }\n\n  componentDidMount() {\n    this.fetchPokemonDetails();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.fetchPokemonDetails(newProps);\n  }\n\n  render() {\n    const { loading, speciesDetails, varieties, chosenVariety } = this.state;\n\n    const variety = varieties && varieties[chosenVariety];\n\n    return (\n      <>\n        <Grid.Row>\n          <Grid.Column>\n            <Dimmer.Dimmable as={Card} fluid dimmed={loading} blurring>\n              <Dimmer active={loading} inverted>\n                <Loader />\n              </Dimmer>\n              <PokemonInfo species={speciesDetails} variety={variety} />\n            </Dimmer.Dimmable>\n          </Grid.Column>\n        </Grid.Row>\n        {variety && (\n          <Grid.Row>\n            <Grid.Column>\n              <TypeSummary types={variety.types.map(t => t.type.name)} />\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </>\n    );\n  }\n}\n\nfunction PokemonInfo({ species, variety }) {\n  return (\n    <Card.Content>\n      {!variety && !species && (\n        <Segment placeholder>\n          <Header icon>\n            <Icon name=\"search\" />\n            Search for a defending pokemon to begin\n          </Header>\n        </Segment>\n      )}\n      {variety && (\n        <Image\n          className=\"pokemon-sprite\"\n          floated=\"left\"\n          src={variety.sprites.front_default}\n        />\n      )}\n      {species && (\n        <>\n          <Card.Header>\n            #\n            {\n              keyedValue(species.pokedex_numbers, {\n                \"pokedex.name\": \"kanto\"\n              }).entry_number\n            }{\" \"}\n            -{\" \"}\n            {\n              keyedValue(species.names, {\n                \"language.name\": \"en\"\n              }).name\n            }\n          </Card.Header>\n          <Card.Meta>\n            {\n              keyedValue(species.genera, {\n                \"language.name\": \"en\"\n              }).genus\n            }\n          </Card.Meta>\n        </>\n      )}\n      {variety &&\n        variety.types.map(({ slot, type: { name } }) => (\n          <TypeBadge key={slot} type={name} />\n        ))}\n      {species && (\n        <Card.Description>\n          {keyedValue(species.flavor_text_entries, {\n            \"language.name\": \"en\",\n            \"version.name\": \"yellow\"\n          }).flavor_text.replace(\"\\u000C\", \" \")}\n        </Card.Description>\n      )}\n    </Card.Content>\n  );\n}\n\nclass TypeBadge extends React.Component<{ type: string }> {\n  render() {\n    const { type } = this.props;\n    return <Label>{titleCase(type)}</Label>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport \"semantic-ui-css/semantic.css\";\nimport \"./App.css\";\nimport TypesPage from \"./TypesPage/index\";\nimport Header from \"./components/Header\";\nimport MissingPage from \"./MissingPage\";\nimport PokemonPage from \"./PokemonPage\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/pokemon\" />\n            </Route>\n            <Route path=\"/pokemon\" component={PokemonPage} />\n            <Route path=\"/types\" component={TypesPage} />\n            <Route component={MissingPage} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}